(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{373:function(e,t,a){"use strict";a.r(t);var i=a(17),s=Object(i.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"page-title"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#page-title"}},[e._v("#")]),e._v(" "+e._s(e.$page.title))]),e._v(" "),a("p",[e._v("Data trees are at the core of Grasshopper's functionality and understanding them is of key importance for us. In this chapter you will learn:")]),e._v(" "),a("ul",[a("li",[e._v("What are data trees?")]),e._v(" "),a("li",[e._v("What do data trees "),a("em",[e._v("mean")]),e._v("?")]),e._v(" "),a("li",[e._v("How does Grasshopper process data trees as inputs?")]),e._v(" "),a("li",[e._v("Data Tree Inspection tools\n"),a("ul",[a("li",[e._v("ParamViewer")]),e._v(" "),a("li",[e._v("Panel")])])]),e._v(" "),a("li",[e._v("Data Tree basic operations\n"),a("ul",[a("li",[e._v("Flatten")]),e._v(" "),a("li",[e._v("Graft")]),e._v(" "),a("li",[e._v("Simplify")]),e._v(" "),a("li",[e._v("Weave")]),e._v(" "),a("li",[e._v("Sift")])])]),e._v(" "),a("li",[e._v("Data Tree selection\n"),a("ul",[a("li",[e._v("Relative Item")]),e._v(" "),a("li",[e._v("Split Tree")]),e._v(" "),a("li",[e._v("Relative Items")])])]),e._v(" "),a("li",[e._v("Cross-reference")])]),e._v(" "),a("h2",{attrs:{id:"what-are-data-trees"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-are-data-trees"}},[e._v("#")]),e._v(" What are data trees ?")]),e._v(" "),a("p",[e._v("Data Trees are the way Grasshopper organizes data internally, wether it's numbers, lines, circles, meshes, surfaces or any combination of the latter. In that sense, we understand a Data Tree as a way to organize entities into different categories.")]),e._v(" "),a("blockquote",[a("p",[e._v("As you might already know, branches are named using curly brackets "),a("code",[e._v("{}")]),e._v(" while branch indexes are named using square brackets "),a("code",[e._v("[]")]),e._v(". Multiple branch levels are separated using "),a("code",[e._v(";")]),e._v(".\ni.e.: The first item in the first branch of a four level data tree is specified as "),a("code",[e._v("{0;0;0;0}[0]")]),e._v(".")])]),e._v(" "),a("p",[e._v("In the simplest case, a 1-dimensional data tree is a list of data at branch "),a("code",[e._v("{0}")]),e._v(" with any number of items "),a("code",[e._v("[n]")]),e._v(", this would be the equivalent of one column in an excel spreadsheet table. Consider the following example:")]),e._v(" "),a("p",[e._v("The following level of complexity would be a 2-dimensional data tree, with $n$ number of branches with $m$ number of items each ("),a("code",[e._v("{n}[m]")]),e._v("). This would be equivalent to an excel spreadsheet, each branch representing a column, and each item representing a row in that specific column.")]),e._v(" "),a("p",[e._v("3-dimensional data trees are the last data tree depth that can be easily visualized. It is comprised of $n;m$ branches with $o$ number of items each ("),a("code",[e._v("{n;m}[o]")]),e._v("). Using the same analogy, this would be equivalent to an excel spreadsheet with multiple tables or sheets. Consider the following example:")]),e._v(" "),a("p",[e._v("1-dimensional and 2-dimensional data trees are the easiest to use and combine, but they have limited possibilities to represent complex data relations. As your grasshopper definitions grow, you will start dealing with "),a("em",[e._v("n-dimensional")]),e._v(" data trees more often.")]),e._v(" "),a("h2",{attrs:{id:"structure-meaning"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#structure-meaning"}},[e._v("#")]),e._v(" Structure = Meaning")]),e._v(" "),a("p",[e._v("As you may have noticed, the examples in the previous section were all based on "),a("em",[e._v("categorical data")]),e._v(". This was a decision we took conciously, instead of representing the examples with geometric entities, since we wanted to emphathise the fact that the underlying data structure of a tree has actual meaning.")]),e._v(" "),a("p",[e._v("Lets have a look at the last example from the previous section:")]),e._v(" "),a("blockquote",[a("p",[e._v("The data tree is divided in 3 levels, each containing a list of values:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("{0;n;n}")]),e._v(" Plant\n"),a("ul",[a("li",[a("code",[e._v("{0;0;n}")]),e._v(" Vegetable\n"),a("ul",[a("li",[a("code",[e._v("{0;0;0}")]),e._v(" Product")]),e._v(" "),a("li",[a("code",[e._v("{0;0;1}")]),e._v(" Price")]),e._v(" "),a("li",[a("code",[e._v("{0;0;2}")]),e._v(" Color")])])]),e._v(" "),a("li",[a("code",[e._v("{0;1;n}")]),e._v(" Fruit\n"),a("ul",[a("li",[a("code",[e._v("{0;1;0}")]),e._v(" Product")]),e._v(" "),a("li",[a("code",[e._v("{0;1;1}")]),e._v(" Price")]),e._v(" "),a("li",[a("code",[e._v("{0;1;2}")]),e._v(" Color")])])])])]),e._v(" "),a("li",[a("code",[e._v("{1;n;n}")]),e._v(" Animal\n"),a("ul",[a("li",[a("code",[e._v("{1;0;n}")]),e._v(" Meat\n"),a("ul",[a("li",[a("code",[e._v("{1;0;0}")]),e._v(" Product")]),e._v(" "),a("li",[a("code",[e._v("{1;0;1}")]),e._v(" Price")]),e._v(" "),a("li",[a("code",[e._v("{1;0;2}")]),e._v(" Color")])])]),e._v(" "),a("li",[a("code",[e._v("{1;1;n}")]),e._v(" Dairy\n"),a("ul",[a("li",[a("code",[e._v("{1;1;0}")]),e._v(" Product")]),e._v(" "),a("li",[a("code",[e._v("{1;1;1}")]),e._v(" Price")]),e._v(" "),a("li",[a("code",[e._v("{1;1;2}")]),e._v(" Color")])])])])])])]),e._v(" "),a("p",[e._v("In this 4-dimensionaL tree, every tree level has a "),a("em",[e._v("meaning")]),e._v(" or, in other words, they represent distinct characteristic of the data it contains:")]),e._v(" "),a("ul",[a("li",[e._v("The first level divides the data in Plant or Animal based products.")]),e._v(" "),a("li",[e._v("The second level divides each of those main categories into their own unique subcategories")]),e._v(" "),a("li",[e._v("The third level represents the different types of values we have fore each subcategory:\n"),a("ul",[a("li",[e._v("Product name")]),e._v(" "),a("li",[e._v("Product price")]),e._v(" "),a("li",[e._v("Product color")])])])]),e._v(" "),a("h2",{attrs:{id:"advanced-data-trees"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#advanced-data-trees"}},[e._v("#")]),e._v(" Advanced Data Trees")]),e._v(" "),a("h2",{attrs:{id:"advanced-selection"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#advanced-selection"}},[e._v("#")]),e._v(" Advanced selection")]),e._v(" "),a("h2",{attrs:{id:"structure-relationships"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#structure-relationships"}},[e._v("#")]),e._v(" Structure relationships")]),e._v(" "),a("h2",{attrs:{id:"advanced-tree-editing"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#advanced-tree-editing"}},[e._v("#")]),e._v(" Advanced tree editing")])])}),[],!1,null,null,null);t.default=s.exports}}]);